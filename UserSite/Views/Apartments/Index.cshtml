@model IEnumerable<RWALib.Models.Apartment>

@{
    ViewBag.Title = "Index";
    IList<RWALib.Models.City> cities = (IList<RWALib.Models.City>)ViewBag.Cities;
    string city = ViewBag.City;
    int adults = ViewBag.Adults;
    int children = ViewBag.Children;
    int rooms = ViewBag.Rooms;
    int sort = ViewBag.Sort;
}

<div class="w-100" style="padding: 0 20px; margin-bottom: 40px; display:flex; flex-direction:row;">
    <div class="w-25">
        <div class="form-group">
            @Html.Label("cities", "City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-select" name="cities" id="cities">
                    @foreach (RWALib.Models.City c in cities)
                    {
                        if (city != null && c.Name == city)
                        {
                            <option selected>@c.Name</option>
                        }
                        else
                        {
                            <option>@c.Name</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("rooms", "Rooms", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("rooms", new { htmlAttributes = new { @class = "form-control", @type = "number", @Value = rooms.ToString() } })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("adults", "Adults", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("adults", new { htmlAttributes = new { @class = "form-control", @type = "number", @Value = adults.ToString() } })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("children", "Children", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("children", new { htmlAttributes = new { @class = "form-control", @type = "number", @Value = children.ToString() } })
            </div>
        </div>
        <div class="form-group">
            <input type="submit" id="btnFilter" value="Apply" class="btn btn-primary mt-2" />
            @Html.ActionLink("Reset", "Reset", new { @o = "" }, new { @class = "btn btn-default mt-2" })
        </div>
    </div>
    <div class="w-25">
        <div class="form-group">
            @Html.Label("sort", "Sort", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-select" name="sort" id="sort">
                    @switch (ViewBag.Sort)
                    {
                        case 1:
                            <option value="0">--Select--</option>
                            <option value="1" selected>Ascending</option>
                            <option value="2">Descending</option>
                            break;

                        case 2:
                            <option value="0">--Select--</option>
                            <option value="1">Ascending</option>
                            <option value="2" selected>Descending</option>
                            break;

                        default:
                            <option value="0" selected>--Select--</option>
                            <option value="1">Ascending</option>
                            <option value="2">Descending</option>
                            break;
                    }
                </select>
            </div>
        </div>
    </div>
</div>
<div id="apartment-container" class="p-2 m-auto">
    @Html.Partial("_ListApartment", Model)
</div>

@section jquery{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnFilter').click(function (e) {
                e.preventDefault();
                const cities = document.getElementById('cities');
                $.ajax({
                    url: '@Url.Action("Filter", "Apartments")',
                    data: JSON.stringify({
                        'city': cities.options[cities.selectedIndex].text,
                        'adults': $('#adults').val(),
                        'children': $('#children').val(),
                        'rooms': $('#rooms').val(),
                        'sort': $('#sort').val()
                    }),
                    type: "POST",
                    dataType: 'html',
                    contentType: "application/json; charset=utf-8",
                    processData: false,
                    success: x => {
                        $('#apartment-container').html(x);
                        LoadPictures();
                    },
                    error: e => alert("Not working")
                })
            });
        });
    </script>
}

<script>
    (function () {
        const cards = document.querySelectorAll('.card');
        const url = 'https://api.unsplash.com/search/photos/?query=apartment&per_page=' + cards.length + '&client_id=V0_1cwILTK1vIwp95YaUZDeNnvCqUooDWKhuAtrsaVc';
        for (let i = 0; i < cards.length; i++) {
            fetch(url)
                .then(response => {
                    if (response.ok) return response.json();
                })
                .then(data => {
                    const image = document.createElement('img');
                    image.className = 'card-img-top';
                    console.log(data.results)
                    image.src = data.results[i].urls.regular;
                    image.style.height = '200px';
                    cards[i].insertBefore(image, cards[i].firstChild);
                })
        }
    }());
</script>